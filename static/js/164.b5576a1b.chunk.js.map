{"version":3,"file":"static/js/164.b5576a1b.chunk.js","mappings":"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","sources":["components/QuestionEditor.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, Button, TextField, Typography, IconButton } from '@mui/material';\nimport { styled } from '@mui/system';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport DragHandleIcon from '@mui/icons-material/DragHandle';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst QuestionBox = styled(Box)(({ theme }) => ({\n  padding: theme.spacing(2),\n  marginBottom: theme.spacing(2),\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: theme.palette.grey[200],\n  border: `2px solid ${theme.palette.primary.main}`,\n}));\n\nconst OptionBox = styled(Box)(({ theme }) => ({\n  padding: theme.spacing(1),\n  marginBottom: theme.spacing(1),\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: theme.palette.grey[100],\n  border: `1px solid ${theme.palette.grey[300]}`,\n}));\n\nconst QuestionEditor = ({ initialQuestions, onQuestionsCreated }) => {\n  const [questions, setQuestions] = useState(initialQuestions);\n  const [newQuestionText, setNewQuestionText] = useState('');\n  const [newQuestionOptions, setNewQuestionOptions] = useState(['', '', '', '', '']);\n\n  useEffect(() => {\n    const savedQuestions = localStorage.getItem('questions');\n    if (savedQuestions) {\n      setQuestions(JSON.parse(savedQuestions));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('questions', JSON.stringify(questions));\n  }, [questions]);\n\n  const handleAddQuestion = (copyPrevious = false) => {\n    const options = copyPrevious && questions.length > 0 ? questions[questions.length - 1].options : [...newQuestionOptions];\n    setQuestions([...questions, { type: 'multiple-choice', text: newQuestionText, options }]);\n    setNewQuestionText('');\n    setNewQuestionOptions(['', '', '', '', '']);\n  };\n\n  const handleRemoveQuestion = (index) => {\n    const newQuestions = questions.filter((_, i) => i !== index);\n    setQuestions(newQuestions);\n  };\n\n  const handleSave = () => {\n    onQuestionsCreated(questions);\n  };\n\n  const handleOptionChange = (index, optionIndex, value) => {\n    const newQuestions = [...questions];\n    newQuestions[index].options[optionIndex] = value;\n    setQuestions(newQuestions);\n  };\n\n  const handleAddOption = (index) => {\n    const newQuestions = [...questions];\n    newQuestions[index].options.push('');\n    setQuestions(newQuestions);\n  };\n\n  const handleRemoveOption = (index, optionIndex) => {\n    const newQuestions = [...questions];\n    newQuestions[index].options = newQuestions[index].options.filter((_, i) => i !== optionIndex);\n    setQuestions(newQuestions);\n  };\n\n  const handleDragEnd = (result) => {\n    if (!result.destination) return;\n    const reorderedQuestions = Array.from(questions);\n    const [removed] = reorderedQuestions.splice(result.source.index, 1);\n    reorderedQuestions.splice(result.destination.index, 0, removed);\n    setQuestions(reorderedQuestions);\n  };\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n      <Typography variant=\"h5\" gutterBottom>\n        質問を編集する\n      </Typography>\n      <DragDropContext onDragEnd={handleDragEnd}>\n        <Droppable droppableId=\"questions\">\n          {(provided) => (\n            <Box ref={provided.innerRef} {...provided.droppableProps}>\n              {questions.map((question, index) => (\n                <Draggable key={index} draggableId={`question-${index}`} index={index}>\n                  {(provided) => (\n                    <QuestionBox ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                        <Box>\n                          <DragHandleIcon />\n                        </Box>\n                        <TextField\n                          value={question.text}\n                          onChange={(e) => {\n                            const newQuestions = [...questions];\n                            newQuestions[index].text = e.target.value;\n                            setQuestions(newQuestions);\n                          }}\n                          placeholder=\"質問内容を入力してください\"\n                          fullWidth\n                        />\n                        <IconButton onClick={() => handleRemoveQuestion(index)} color=\"secondary\">\n                          <DeleteIcon />\n                        </IconButton>\n                      </Box>\n                      <Box sx={{ display: 'flex', flexDirection: 'column', ml: 4 }}>\n                        {question.options.map((option, optionIndex) => (\n                          <OptionBox key={optionIndex} sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                            <TextField\n                              value={option}\n                              onChange={(e) => handleOptionChange(index, optionIndex, e.target.value)}\n                              placeholder=\"選択肢を入力してください\"\n                              fullWidth\n                            />\n                            <IconButton onClick={() => handleRemoveOption(index, optionIndex)} color=\"secondary\">\n                              <DeleteIcon />\n                            </IconButton>\n                          </OptionBox>\n                        ))}\n                        <Button onClick={() => handleAddOption(index)} variant=\"contained\" color=\"primary\" sx={{ alignSelf: 'flex-start' }}>\n                          選択肢を追加\n                        </Button>\n                      </Box>\n                    </QuestionBox>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </Box>\n          )}\n        </Droppable>\n      </DragDropContext>\n      <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, mt: 4 }}>\n        <TextField\n          value={newQuestionText}\n          onChange={(e) => setNewQuestionText(e.target.value)}\n          label=\"新しい質問\"\n          placeholder=\"質問内容を入力してください\"\n          fullWidth\n        />\n        {newQuestionOptions.map((option, index) => (\n          <Box key={index} sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n            <TextField\n              value={option}\n              onChange={(e) => {\n                const newOptions = [...newQuestionOptions];\n                newOptions[index] = e.target.value;\n                setNewQuestionOptions(newOptions);\n              }}\n              label={`選択肢 ${index + 1}`}\n              placeholder=\"選択肢を入力してください\"\n              fullWidth\n            />\n            <IconButton onClick={() => setNewQuestionOptions(newQuestionOptions.filter((_, i) => i !== index))} color=\"secondary\">\n              <DeleteIcon />\n            </IconButton>\n          </Box>\n        ))}\n        <Button onClick={() => setNewQuestionOptions([...newQuestionOptions, ''])} variant=\"contained\" color=\"primary\">\n          選択肢を追加\n        </Button>\n        <Box sx={{ display: 'flex', gap: 2 }}>\n          <Button onClick={() => handleAddQuestion()} variant=\"contained\" color=\"primary\">\n            質問を追加\n          </Button>\n          <Button onClick={() => handleAddQuestion(true)} variant=\"contained\" color=\"secondary\">\n            前の選択肢をコピーして追加\n          </Button>\n        </Box>\n      </Box>\n      <Button onClick={handleSave} variant=\"contained\" color=\"secondary\" sx={{ alignSelf: 'flex-start', mt: 4 }}>\n        保存\n      </Button>\n    </Box>\n  );\n};\n\nexport default QuestionEditor;\n"],"names":["QuestionBox","styled","Box","_ref","theme","padding","spacing","marginBottom","borderRadius","shape","backgroundColor","palette","grey","border","concat","primary","main","OptionBox","_ref2","_ref3","initialQuestions","onQuestionsCreated","questions","setQuestions","useState","newQuestionText","setNewQuestionText","newQuestionOptions","setNewQuestionOptions","useEffect","savedQuestions","localStorage","getItem","JSON","parse","setItem","stringify","handleAddQuestion","options","arguments","length","undefined","type","text","_jsxs","sx","display","flexDirection","gap","children","_jsx","Typography","variant","gutterBottom","DragDropContext","onDragEnd","result","destination","reorderedQuestions","Array","from","removed","splice","source","index","Droppable","droppableId","provided","ref","innerRef","droppableProps","map","question","Draggable","draggableId","draggableProps","dragHandleProps","alignItems","DragHandleIcon","TextField","value","onChange","e","newQuestions","target","placeholder","fullWidth","IconButton","onClick","filter","_","i","handleRemoveQuestion","color","DeleteIcon","ml","option","optionIndex","handleOptionChange","handleRemoveOption","Button","push","handleAddOption","alignSelf","mt","label","newOptions","handleSave"],"sourceRoot":""}